version: 2.1
defaults: &defaults
  docker:
  - image: cimg/python:3.13.5-browsers
install_dependency: &install_dependency
  name: Installation of build and deployment dependencies.
  command: |
    pip3 install awscli --upgrade
install_deploysuite: &install_deploysuite
  name: Installation of install_deploysuite.
  command: |
    git clone --branch v1.4.17 https://github.com/topcoder-platform/tc-deploy-scripts ../buildscript
    cp ./../buildscript/master_deploy.sh .
    cp ./../buildscript/buildenv.sh .
    cp ./../buildscript/awsconfiguration.sh .
    cp ./../buildscript/psvar-processor.sh .

restore_cache_settings_for_build: &restore_cache_settings_for_build
  key: docker-node-modules-{{ checksum "pnpm-lock.yaml" }}

save_cache_settings: &save_cache_settings
  key: docker-node-modules-{{ checksum "pnpm-lock.yaml" }}
  paths:
  - node_modules


builddeploy_steps: &builddeploy_steps
- checkout
- setup_remote_docker
- run: *install_dependency
- run: *install_deploysuite
- restore_cache: *restore_cache_settings_for_build
- run:
    name: "Build docker image"
    command: |
      ./build.sh
- save_cache: *save_cache_settings
- deploy:
    name: Running MasterScript.
    command: |
      ./awsconfiguration.sh $DEPLOY_ENV
      source awsenvconf
      ./psvar-processor.sh -t appenv -p /config/${APPNAME}/deployvar
      source deployvar_env
      ./master_deploy.sh -d ECS -e $DEPLOY_ENV -t latest -j /config/${APPNAME}/appvar -i ${APPNAME} -p FARGATE
jobs:
  # Build & Deploy against development backend
  "build-dev":
    !!merge <<: *defaults
    environment:
      DEPLOY_ENV: "DEV"
      LOGICAL_ENV: "dev"
      APPNAME: "tc-mcp"
    steps: *builddeploy_steps

  "build-qa":
    !!merge <<: *defaults
    environment:
      DEPLOY_ENV: "QA"
      LOGICAL_ENV: "qa"
      APPNAME: "tc-mcp"
    steps: *builddeploy_steps

  "build-prod":
    !!merge <<: *defaults
    environment:
      DEPLOY_ENV: "PROD"
      LOGICAL_ENV: "prod"
      APPNAME: "tc-mcp"
    steps: *builddeploy_steps

workflows:
  version: 2
  build:
    jobs:
    # Development builds are executed on "develop" branch only.
    - "build-dev":
        context: org-global
        filters:
          branches:
            only:
            - dev
            - add-timing-logging

    - "build-qa":
        context: org-global
        filters:
          branches:
            only:
            - qa

    - "build-prod":
        context: org-global
        filters:
          branches:
            only: master
